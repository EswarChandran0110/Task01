1)Difference between HTTP1.1 vs HTTP2 :
              The latest HTTP/2 version has evolved significantly in terms of capabilities and attributes such as transforming from a text protocol to a binary protocol.
HTTP1.1 used to process text commands to complete request response cycles.HTTP/2 will use binary commands(1s & 0s) to execute the same tasks.this atribute eases complica
-ions with framing and simplifies implementation of commands that were confusingly intermixed due to commands containing text and optional spaces.browsers using HTTP/2  
implementation will convert same text commands into binary before transmitting it over the network.

2) http version history :
              The first documented version of HTTP was HTTP V0.9 (1991). Dave Raggett led the HTTP Working Group (HTTP WG) in 1995 and wanted to expand the protocol with
extended operations, extended negotiation, richer meta-information, tied with a security protocol which became more efficient by adding additional methods and header fie
-lds.[15][16] RFC 1945 officially introduced and recognized HTTP V1.0 in 1996.The HTTP WG planned to publish new standards in December 1995[17] and the support for pre-
standard HTTP/1.1 based on the then developing RFC 2068 (called HTTP-NG) was rapidly adopted by the major browser developers in early 1996. End-user adoption of the new
browsers was rapid. In March 1996, one web hosting company reported that over 40% of browsers in use on the Internet were HTTP 1.1 compliant. That same web hosting 
company reported that by June 1996, 65% of all browsers accessing their servers were HTTP/1.1 compliant.[18] The HTTP/1.1 standard as defined in RFC 2068 was officially 
released in January 1997. Improvements and updates to the HTTP/1.1 standard were released under RFC 2616 in June 1999.

               In 2007, the HTTP Working Group was formed, in part, to revise and clarify the HTTP/1.1 specification. In June 2014, the WG released an updated six-part 
specification obsoleting RFC 2616:

RFC 7230, HTTP/1.1: Message Syntax and Routing
RFC 7231, HTTP/1.1: Semantics and Content
RFC 7232, HTTP/1.1: Conditional Requests
RFC 7233, HTTP/1.1: Range Requests
RFC 7234, HTTP/1.1: Caching
RFC 7235, HTTP/1.1: Authentication
                HTTP/2 was published as RFC 7540 in May 2015.


3) List 5 difference between Browser JS(console) vs Nodejs :


          JAVASCRIPT:
               * It is a programming language that is used for writing scripts on the website.
               * It can only be run in the browsers.
               * It is basically used on the client-side.
               * It is capable enough to add HTML and play with the DOM.
               * It can run in any browser engine as like JS core in safari and Spidermonkey in Firefox.
          NODE JS:
               * It is a Javascript runtime environment.
               * NodeJS code can be run oytside the browser.
               * It is mostly used on the server-side.
               * NodeJS does not have capability to add HTML tags.
               * Nodejs can only run in v8 engine of google chrome.

4)what happens when you type a URL in the address bar in the browser?
         
              i) Browser checks cache for DNS entry to find the corresponding IP address of website.
It looks for following cache. If not found in one, then continues checking to the next until found.
                  * Browser Cache
                  * Operating Systems Cache
                  * Router Cache
                  * ISP Cache 
              ii) If not found in cache, ISPâ€™s (Internet Service Provider) DNS server initiates a 
DNS query to find IP address of server that hosts the domain name.The requests are sent using small
data packets that contain information content of request and IP address it is destined for.
             iii) Browser initiates a TCP (Transfer Control Protocol) connection with the server 
using synchronize(SYN) and acknowledge(ACK) messages.
              iv) Browser sends an HTTP request to the web server. GET or POST request.
               v) Server on the host computer handles that request and sends back a response. It 
assembles a response in some format like JSON, XML and HTML. 
              vi) Server sends out an HTTP response along with the status of response.
             vii) Browser displays HTML content.  